#!/bin/bash
# Git hook to prevent AI attributions in commit messages
# This hook checks for common AI attribution patterns and blocks commits containing them

# Get the commit message file
COMMIT_MSG_FILE=$1
COMMIT_MSG=$(cat "$COMMIT_MSG_FILE")

# Define patterns to check for AI attributions
# These patterns are case-insensitive
AI_PATTERNS=(
    "Generated with.*Claude"
    "Co-Authored-By:.*Claude"
    "Generated by.*AI"
    "Created by.*AI"
    "Written by.*AI"
    "Generated with.*AI"
    "Co-authored-by:.*AI"
    "Co-authored-by:.*bot"
    "Generated using"
    "Auto-generated"
    "ü§ñ"
    "ü§ñ.*Generated"
    "Anthropic"
    "ChatGPT"
    "GPT-[0-9]"
    "Copilot"
    "AI-generated"
    "AI-assisted"
    "LLM"
)

# Color codes for output
RED='\033[0;31m'
YELLOW='\033[1;33m'
GREEN='\033[0;32m'
NC='\033[0m' # No Color

# Check each pattern
for pattern in "${AI_PATTERNS[@]}"; do
    if echo "$COMMIT_MSG" | grep -iE "$pattern" > /dev/null 2>&1; then
        echo -e "${RED}‚ùå Commit rejected: AI attribution detected${NC}"
        echo -e "${YELLOW}Found pattern: '$pattern'${NC}"
        echo ""
        echo -e "${YELLOW}Your commit message contains:${NC}"
        echo "----------------------------------------"
        echo "$COMMIT_MSG"
        echo "----------------------------------------"
        echo ""
        echo -e "${GREEN}Please remove any AI attributions from your commit message.${NC}"
        echo -e "${GREEN}Commit messages should describe what changed and why, not how it was created.${NC}"
        echo ""
        echo "Example of a good commit message:"
        echo "  feat: add terminal widget with WebSocket support"
        echo ""
        echo "Example of rejected messages:"
        echo "  ‚ùå feat: add terminal widget (Generated with Claude)"
        echo "  ‚ùå feat: add terminal widget - AI-assisted"
        echo "  ‚ùå feat: add terminal widget ü§ñ"
        exit 1
    fi
done

# If we get here, the commit message is clean
exit 0